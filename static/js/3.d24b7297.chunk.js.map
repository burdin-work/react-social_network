{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","styles","dialog","to","activeClassName","active","name","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","maxLength50","placeholder","sendMessageWrap","Dialogs","dialogsElements","dialogsPage","dialogs","map","key","messagesElements","messages","isAuth","dialogsItems","newMessageWrap","values","sendMessage","newMessageBody","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,OAAS,wBAAwB,KAAO,sBAAsB,gBAAkB,mC,oBCAvND,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,iHCalDC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAOC,QACnB,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAOI,QAASR,EAAMS,Q,kBCDvDC,EAJC,SAACV,GACb,OAAO,yBAAKG,UAAWC,IAAOO,SAAUX,EAAMW,U,yCCsB5CC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,aAAcb,UAAWC,IAAOU,MAElD,kBAACG,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,KACXZ,KAAK,iBACLa,YAAY,uBAGnB,yBAAKnB,UAAWC,IAAOmB,iBACnB,qDA4CDC,EAlCC,SAACxB,GAEb,IAAIyB,EACAzB,EAAM0B,YAAYC,QAAQC,KAAI,SAAAvB,GAAM,OAAI,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMoB,IAAKxB,EAAOH,GAAIA,GAAIG,EAAOH,QAElG4B,EACA9B,EAAM0B,YAAYK,SAASH,KAAI,SAAAjB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASkB,IAAKlB,EAAQT,QAQ9F,OAAKF,EAAMgC,OAKP,yBAAK7B,UAAWC,IAAOuB,SACnB,yBAAKxB,UAAWC,IAAO6B,cAClBR,GAEL,yBAAKtB,UAAWC,IAAO2B,UACnB,6BAAMD,GACN,yBAAK3B,UAAWC,IAAO8B,gBACvB,kBAACtB,EAAD,CAAqBG,SAhBX,SAACoB,GACnBnC,EAAMoC,YAAYD,EAAOE,sBAIlB,kBAAC,IAAD,CAAU/B,GAAI,Y,wBCxBdgC,sBACXC,aAfkB,SAACC,GACvB,MAAO,CACHd,YAAac,EAAMd,gBAIE,SAACe,GAC1B,MAAO,CACHL,YAAc,SAACC,GACXI,EAASC,YAAwBL,SAOrCM,IAFWL,CAGbd","file":"static/js/3.d24b7297.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__18gtK\",\"dialogsItems\":\"Dialogs_dialogsItems__2Usjx\",\"messages\":\"Dialogs_messages__BfVRE\",\"active\":\"Dialogs_active__1NkVi\",\"form\":\"Dialogs_form__3lmaT\",\"sendMessageWrap\":\"Dialogs_sendMessageWrap__2kmBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2rdvb\",\"active\":\"DialogItem_active__1QQsp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__NY6rr\",\"message\":\"Message_message__1VMl6\"};","import React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path} activeClassName={styles.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={styles.message}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLength50} from \"../../utils/validators/validators\";\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.form}>\r\n\r\n            <Field component={Textarea}\r\n                   validate={[maxLength50]}\r\n                   name=\"newMessageBody\"\r\n                   placeholder=\"enter your message\"\r\n            />\r\n\r\n            <div className={styles.sendMessageWrap} >\r\n                <button>send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements =\r\n        props.dialogsPage.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n\r\n    let messagesElements =\r\n        props.dialogsPage.messages.map(message => <Message message={message.message} key={message.id}/>);\r\n\r\n\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div className={styles.newMessageWrap}>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\nreturn {\r\n    dialogsPage: state.dialogsPage,\r\n}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n    sendMessage : (newMessageBody) => {\r\n        dispatch(addMessageActionCreator(newMessageBody));\r\n    }\r\n}\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}